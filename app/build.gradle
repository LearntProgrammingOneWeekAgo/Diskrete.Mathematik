/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // JavaFX
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

// JavaFX Module
javafx {
    version = "23.0.1"
    modules = [
            'javafx.base',
            'javafx.controls',
            'javafx.fxml',
            'javafx.graphics'
    ]
}
sourceSets.main.resources.srcDirs = ['src/main/resources']

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

// Erlaubt die Nutzung von java.util.Scanner
run {
    standardInput = System.in
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // JavaFX Dependencies
    implementation 'org.openjfx:javafx-controls:17'
    implementation 'org.openjfx:javafx-fxml:17'

    // Json Dependencies
    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20231013'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.Launcher'
}

// Ohne diese Angaben funktioniert der .jar Build nicht.
jar {
    manifest {
        attributes(
                'Main-Class': 'org.Launcher'
        )
    }

    /** --> Einbinden wenn eine Uber Jar erstellt werden soll.
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    */

    // Duplicate Strategy wird gesetzt da sonst eine Exception auftritt... keine Ahnung warum lol
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}